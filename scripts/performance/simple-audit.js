#!/usr/bin/env node

import { execSync } from 'child_process'
import fs from 'fs'

console.log('üîç –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ –∞—É–¥–∏—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...')

try {
  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  if (!fs.existsSync('./reports')) {
    fs.mkdirSync('./reports', { recursive: true })
  }

  console.log('üìä –ó–∞–ø—É—Å–∫ Lighthouse –∞—É–¥–∏—Ç–∞...')
  
  // –ü—Ä–æ—Å—Ç–æ–π Lighthouse –∞—É–¥–∏—Ç
  const result = execSync(
    'npx lighthouse http://localhost:4173 --output=html --output-path=./reports/lighthouse-report.html --chrome-flags="--no-sandbox" --quiet', 
    { 
      encoding: 'utf8',
      timeout: 60000 // 60 —Å–µ–∫—É–Ω–¥
    }
  )
  
  console.log('‚úÖ Lighthouse –∞—É–¥–∏—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!')
  console.log('üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ./reports/lighthouse-report.html')
  
  // –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–¥–∏–º JSON –≤–µ—Ä—Å–∏—é –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
  const jsonResult = execSync(
    'npx lighthouse http://localhost:4173 --output=json --output-path=./reports/lighthouse-data.json --chrome-flags="--no-sandbox" --quiet',
    { 
      encoding: 'utf8',
      timeout: 60000
    }
  )
  
  console.log('üìä JSON –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: ./reports/lighthouse-data.json')
  
  // –ß–∏—Ç–∞–µ–º –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º JSON —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  const data = JSON.parse(fs.readFileSync('./reports/lighthouse-data.json', 'utf8'))
  
  console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–£–î–ò–¢–ê:')
  console.log('==================')
  
  const scores = data.lhr.categories
  console.log(`üìà Performance: ${Math.round(scores.performance.score * 100)}/100`)
  console.log(`‚ôø Accessibility: ${Math.round(scores.accessibility.score * 100)}/100`)
  console.log(`üîß Best Practices: ${Math.round(scores['best-practices'].score * 100)}/100`)
  console.log(`üîç SEO: ${Math.round(scores.seo.score * 100)}/100`)
  
  // Core Web Vitals
  const audits = data.lhr.audits
  console.log('\nüåê CORE WEB VITALS:')
  console.log('==================')
  
  if (audits['largest-contentful-paint']) {
    const lcp = audits['largest-contentful-paint'].numericValue
    console.log(`üé® LCP (Largest Contentful Paint): ${(lcp/1000).toFixed(2)}s ${lcp > 2500 ? '‚ùå' : lcp > 1800 ? '‚ö†Ô∏è' : '‚úÖ'}`)
  }
  
  if (audits['cumulative-layout-shift']) {
    const cls = audits['cumulative-layout-shift'].numericValue
    console.log(`üìê CLS (Cumulative Layout Shift): ${cls.toFixed(3)} ${cls > 0.1 ? '‚ùå' : cls > 0.05 ? '‚ö†Ô∏è' : '‚úÖ'}`)
  }
  
  if (audits['total-blocking-time']) {
    const tbt = audits['total-blocking-time'].numericValue
    console.log(`‚è±Ô∏è TBT (Total Blocking Time): ${tbt.toFixed(0)}ms ${tbt > 300 ? '‚ùå' : tbt > 150 ? '‚ö†Ô∏è' : '‚úÖ'}`)
  }
  
  // –ü—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  console.log('\n‚ö° –û–°–ù–û–í–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:')
  console.log('===================')
  
  const opportunities = data.lhr.audits
  const issues = []
  
  if (opportunities['unused-javascript'] && opportunities['unused-javascript'].score < 1) {
    issues.push(`üóëÔ∏è –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π JavaScript: ${opportunities['unused-javascript'].details?.overallSavingsMs || 'N/A'}ms`)
  }
  
  if (opportunities['unused-css-rules'] && opportunities['unused-css-rules'].score < 1) {
    issues.push(`üé® –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π CSS: ${opportunities['unused-css-rules'].details?.overallSavingsMs || 'N/A'}ms`)
  }
  
  if (opportunities['efficiently-encode-images'] && opportunities['efficiently-encode-images'].score < 1) {
    issues.push(`üñºÔ∏è –ù–µ–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è`)
  }
  
  if (opportunities['modern-image-formats'] && opportunities['modern-image-formats'].score < 1) {
    issues.push(`üì∑ –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`)
  }
  
  if (issues.length > 0) {
    issues.forEach(issue => console.log(issue))
  } else {
    console.log('üéâ –°–µ—Ä—å–µ–∑–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
  }
  
  console.log('\nüìñ –û—Ç–∫—Ä–æ–π—Ç–µ ./reports/lighthouse-report.html –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞')
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞—É–¥–∏—Ç–∞:', error.message)
  process.exit(1)
}