#!/usr/bin/env node

import fs from 'fs'
import path from 'path'

console.log('üì¶ –ê–ù–ê–õ–ò–ó –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô –ò –†–ê–ó–ú–ï–†–û–í –ë–ê–ù–î–õ–û–í')
console.log('=' * 50)

// –ß–∏—Ç–∞–µ–º package.json
const packageJson = JSON.parse(fs.readFileSync('./package.json', 'utf8'))

console.log('\nüìã –£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ò:')
console.log('-'.repeat(30))

const deps = packageJson.dependencies || {}
const devDeps = packageJson.devDependencies || {}

console.log('\nüî∑ Production –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:')
Object.entries(deps).forEach(([name, version]) => {
  console.log(`  ‚Ä¢ ${name}: ${version}`)
})

console.log(`\nüìä –í—Å–µ–≥–æ production –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: ${Object.keys(deps).length}`)

// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
console.log('\nüìÅ –ê–ù–ê–õ–ò–ó –†–ê–ó–ú–ï–†–û–í –§–ê–ô–õ–û–í:')
console.log('-'.repeat(30))

if (fs.existsSync('./dist')) {
  const distFiles = []
  
  function getFiles(dir, fileList = []) {
    const files = fs.readdirSync(dir)
    files.forEach(file => {
      const filePath = path.join(dir, file)
      const stat = fs.statSync(filePath)
      if (stat.isDirectory()) {
        getFiles(filePath, fileList)
      } else {
        const size = stat.size
        const relativePath = path.relative('./dist', filePath)
        fileList.push({ path: relativePath, size, ext: path.extname(file) })
      }
    })
    return fileList
  }
  
  const files = getFiles('./dist')
  
  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º —Ñ–∞–π–ª–æ–≤
  const fileTypes = {}
  files.forEach(file => {
    const ext = file.ext || 'other'
    if (!fileTypes[ext]) fileTypes[ext] = []
    fileTypes[ext].push(file)
  })
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø JS —Ñ–∞–π–ª–æ–≤
  const jsFiles = files.filter(f => f.ext === '.js').sort((a, b) => b.size - a.size)
  
  console.log('\nüî• –¢–û–ü-10 –°–ê–ú–´–• –ë–û–õ–¨–®–ò–• JS –§–ê–ô–õ–û–í:')
  jsFiles.slice(0, 10).forEach((file, i) => {
    const sizeKB = (file.size / 1024).toFixed(1)
    const status = file.size > 500000 ? '‚ùå' : file.size > 200000 ? '‚ö†Ô∏è' : '‚úÖ'
    console.log(`  ${i + 1}. ${file.path} - ${sizeKB}KB ${status}`)
  })
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const totalSize = files.reduce((sum, file) => sum + file.size, 0)
  const jsSize = jsFiles.reduce((sum, file) => sum + file.size, 0)
  const cssFiles = files.filter(f => f.ext === '.css')
  const cssSize = cssFiles.reduce((sum, file) => sum + file.size, 0)
  
  console.log('\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:')
  console.log(`  üì¶ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${(totalSize / 1024 / 1024).toFixed(2)}MB`)
  console.log(`  üìú JavaScript: ${(jsSize / 1024 / 1024).toFixed(2)}MB (${jsFiles.length} —Ñ–∞–π–ª–æ–≤)`)
  console.log(`  üé® CSS: ${(cssSize / 1024).toFixed(1)}KB (${cssFiles.length} —Ñ–∞–π–ª–æ–≤)`)
  
} else {
  console.log('‚ùå –ü–∞–ø–∫–∞ dist –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ npm run build')
}

// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
console.log('\n‚ö†Ô∏è –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–û –¢–Ø–ñ–ï–õ–´–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ò:')
console.log('-'.repeat(30))

const heavyLibraries = [
  'react-image-gallery', 'swiper', 'gsap', 'animate.css', 
  'react-datepicker', 'react-phone-input-2', 'react-select',
  'axios', '@tanstack/react-query'
]

const found = heavyLibraries.filter(lib => deps[lib])
found.forEach(lib => {
  console.log(`  ‚ö†Ô∏è ${lib}: ${deps[lib]}`)
})

console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò:')
console.log('-'.repeat(30))

console.log('\nüîß –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:')
console.log('  1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å code splitting –≤ Vite')
console.log('  2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å tree shaking –¥–ª—è –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –∫–æ–¥–∞')
console.log('  3. Lazy loading –¥–ª—è —Ç—è–∂–µ–ª—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤')
console.log('  4. –ó–∞–º–µ–Ω–∏—Ç—å —Ç—è–∂–µ–ª—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –Ω–∞ –ª–µ–≥–∫–∏–µ –∞–Ω–∞–ª–æ–≥–∏')

console.log('\nüìà –°—Ä–µ–¥–Ω–∏–π —Å—Ä–æ–∫:') 
console.log('  1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å dynamic imports –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü')
console.log('  2. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (WebP, —Ä–∞–∑–º–µ—Ä—ã)')
console.log('  3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å preloading –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤')
console.log('  4. –£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏')

console.log('\nüöÄ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:')
console.log('  ‚Ä¢ –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ initial bundle –Ω–∞ 60-70%')
console.log('  ‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ LCP —Å 4-5s –¥–æ 2-2.5s')
console.log('  ‚Ä¢ Performance Score —Å 30-40 –¥–æ 80-90')

console.log('\nüìÑ –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:')
console.log('  npm run bundle:analyze')