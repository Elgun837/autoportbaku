import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import { resolve } from 'path';
import { copyFileSync, mkdirSync, existsSync, readdirSync, statSync } from 'fs';
import { join } from 'path';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
const findFiles = (dir, extensions) => {
  const files = [];
  
  const scanDir = (currentDir) => {
    try {
      const items = readdirSync(currentDir);
      
      items.forEach(item => {
        const fullPath = join(currentDir, item);
        const stat = statSync(fullPath);
        
        if (stat.isDirectory()) {
          scanDir(fullPath);
        } else if (extensions.some(ext => item.toLowerCase().endsWith(ext))) {
          files.push(fullPath.replace(/\\/g, '/'));
        }
      });
    } catch (err) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç—É–ø–∞
    }
  };
  
  scanDir(dir);
  return files;
};

// –ü–ª–∞–≥–∏–Ω –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
const copyAssetsPlugin = () => {
  return {
    name: 'copy-assets',
    writeBundle() {
      // –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ src/assets –≤ dist —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
      const imageFiles = findFiles('src/assets/images', ['.webp', '.jpg', '.jpeg', '.png', '.svg']);
      
      imageFiles.forEach(file => {
        const distPath = `dist/${file}`;
        const distDir = distPath.substring(0, distPath.lastIndexOf('/'));
        
        // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (!existsSync(distDir)) {
          mkdirSync(distDir, { recursive: true });
        }
        
        // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
        try {
          copyFileSync(file, distPath);
          console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: ${file} ‚Üí ${distPath}`);
        } catch (err) {
          console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è ${file}:`, err.message);
        }
      });
    }
  };
};

// https://vite.dev/config/
export default defineConfig({
  plugins: [react(), copyAssetsPlugin()],
  base: '/',
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–ª–∏–∞—Å–æ–≤ –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
  resolve: {
    alias: {
      '/src': resolve(__dirname, 'src')
    }
  },
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
  assetsInclude: ['**/*.webp', '**/*.jpg', '**/*.png', '**/*.svg'],
  css: {
    devSourcemap: true,
    preprocessorOptions: { 
      scss: { 
        sourceMap: false 
      } 
    },
    // PostCSS –æ–±—Ä–∞–±–æ—Ç–∫–∞ (–≤–∫–ª—é—á–∞—è PurgeCSS) —Ç–æ–ª—å–∫–æ –≤ production
    postcss: process.env.NODE_ENV === 'production' ? './postcss.config.js' : undefined
  },
  build: { 
    sourcemap: false,
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
    copyPublicDir: true,
    rollupOptions: {
      output: {
        manualChunks: (id) => {
          // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–∞–¥–∞—é—Ç –≤ vendor
          if (id.includes('node_modules')) {
            const packageName = id.split('node_modules/')[1].split('/')[0];
            if (!['react', 'react-dom', 'react-router-dom', 'react-select', 'react-datepicker', 'react-phone-input-2', 'react-loading-skeleton', 'gsap', 'aos', 'animate.css', 'react-image-gallery', 'swiper', '@tanstack', 'axios', 'xml2js'].some(known => packageName.includes(known))) {
              console.log('üîç VENDOR:', packageName, '|', id.split('node_modules/')[1]);
            }
          }
          
          // Core React - —Å–∞–º—ã–π –≤–∞–∂–Ω—ã–π chunk
          if (id.includes('node_modules/react/') || id.includes('node_modules/react-dom/')) {
            return 'react-vendor';
          }
          
          // Router - –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —Å –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
          if (id.includes('react-router-dom')) {
            return 'router-vendor';
          }
          
          // UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã - –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å lazy
          if (id.includes('react-select') || id.includes('react-datepicker') || id.includes('react-phone-input-2') || id.includes('react-loading-skeleton')) {
            return 'ui-vendor';
          }
          
          // –ê–Ω–∏–º–∞—Ü–∏–∏ - —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ
          if (id.includes('gsap') || id.includes('aos') || id.includes('animate.css')) {
            return 'animation-vendor';
          }
          
          // –£—Ç–∏–ª–∏—Ç—ã - –æ–±—â–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
          if (id.includes('axios') || id.includes('xml2js')) {
            return 'utils-vendor';
          }
          
          // –ì–∞–ª–µ—Ä–µ–∏ - —Ç—è–∂–µ–ª—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
          if (id.includes('react-image-gallery') || id.includes('swiper')) {
            return 'gallery-vendor';
          }
          
          // Query - –¥–∞–Ω–Ω—ã–µ
          if (id.includes('@tanstack/react-query')) {
            return 'query-vendor';
          }
          
          // –û—Å—Ç–∞–ª—å–Ω—ã–µ vendor –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
          if (id.includes('node_modules')) {
            return 'vendor';
          }
          
          // –ù–ï —Ä–∞–∑–¥–µ–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º - —ç—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
          // App chunks –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º - –æ—Ç–∫–ª—é—á–µ–Ω–æ
          // if (id.includes('/pages/')) {
          //   const pageName = id.split('/pages/')[1].split('.')[0].toLowerCase();
          //   return `page-${pageName}`;
          // }
        },
        // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
        chunkFileNames: 'assets/js/[name]-[hash].js',
        entryFileNames: 'assets/js/[name]-[hash].js',
        assetFileNames: (assetInfo) => {
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ src/assets
          if (assetInfo.name && assetInfo.name.includes('src/assets/images/')) {
            return 'src/assets/images/[name].[ext]';
          }
          // –û–±—ã—á–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
          return 'assets/[ext]/[name]-[hash].[ext]';
        }
      }
    },
    // –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–π –ª–∏–º–∏—Ç
    chunkSizeWarningLimit: 200,
    // –ú–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è
    minify: 'terser',
    terserOptions: {
      compress: {
        drop_console: true, // –£–¥–∞–ª—è–µ–º console.log –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
        drop_debugger: true,
      },
    },
  },
});
